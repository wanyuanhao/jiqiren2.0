[2020-12-28 22:11:39] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2020-12-28 22:11:40] [INFO] >> Headers.py >> 第33行  - 账号：wanyuanhao，登录报错：{'error': 'invalid_grant', 'error_description': '{"Data":null,"Code":0,"Message":"登录失败，顶级账号被禁用"}'} 
[2020-12-28 22:11:40] [INFO] >> Test_case.py >> 第35行  - 新增数据——录入出单流程 
[2020-12-28 22:11:40] [INFO] >> Interface_quote.py >> 第22行  - 京AC1122发起续保 
[2020-12-28 22:11:41] [INFO] >> Interface_quote.py >> 第50行  - 续保响应结果异常:{'data': None, 'code': 1003, 'message': '校验失败'} 
[2020-12-28 22:11:41] [INFO] >> Test_case.py >> 第49行  - 顶级账户计划回访数据量对比，使用账号：jiao 
[2020-12-28 22:11:41] [INFO] >> Headers.py >> 第60行  - 账号：jiao，登录报错：{'error': 'invalid_grant', 'error_description': '{"Data":null,"Code":0,"Message":"用户名或密码错误"}'} 
[2020-12-28 22:11:41] [INFO] >> Test_case.py >> 第72行  - 校验报价成功的数据是否有报价历史 
[2020-12-28 22:11:41] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:11:42] [ERROR] >> CustomerList.py >> 第404行  - 没有报价成功数据 
[2020-12-28 22:11:42] [INFO] >> Test_case.py >> 第82行  - 校验切换报价历史是否成功 
[2020-12-28 22:11:42] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:11:42] [ERROR] >> CustomerList.py >> 第404行  - 没有报价成功数据 
[2020-12-28 22:11:42] [INFO] >> Test_case.py >> 第102行  - 下级账户计划回访数据量对比,使用账号：18612938273 
[2020-12-28 22:11:42] [INFO] >> Headers.py >> 第60行  - 账号：18612938273，登录报错：{'error': 'invalid_grant', 'error_description': '{"Data":null,"Code":0,"Message":"用户名或密码错误"}'} 
[2020-12-28 22:11:42] [INFO] >> Test_case.py >> 第125行  - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-28 22:11:42] [INFO] >> Test_case.py >> 第126行  - 执行分配用例 
[2020-12-28 22:11:43] [INFO] >> Headers.py >> 第60行  - 账号：wanyuanhao，登录报错：{'error': 'invalid_grant', 'error_description': '{"Data":null,"Code":0,"Message":"登录失败，顶级账号被禁用"}'} 
[2020-12-28 22:11:43] [INFO] >> Test_case.py >> 第134行  - 使用全部客户第5条数据录入战败 
[2020-12-28 22:11:43] [INFO] >> CustomerList.py >> 第434行  - 获取全部客户数据 
[2020-12-28 22:11:43] [INFO] >> run_case.py >> 第34行  - 发送邮件 
[2020-12-28 22:12:32] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2020-12-28 22:12:33] [INFO] >> Headers.py >> 第40行  - token更新到config文件 
[2020-12-28 22:12:33] [INFO] >> Headers.py >> 第42行  - 返回token 
[2020-12-28 22:12:33] [INFO] >> Test_case.py >> 第35行  - 新增数据——录入出单流程 
[2020-12-28 22:12:33] [INFO] >> Interface_quote.py >> 第22行  - 京AC1122发起续保 
[2020-12-28 22:12:33] [INFO] >> Interface_quote.py >> 第41行  - 获取续保响应结果 
[2020-12-28 22:12:33] [INFO] >> Interface_quote.py >> 第44行  - 新增车牌成功 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第27行  - 获取京AC1122查询结果 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第46行  - 根据buid录入出单，默认录入人保 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第49行  - 客户列表查询京AC1122是否存在 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第27行  - 获取京AC1122查询结果 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第54行  - 查询结果拿第一个buid 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第63行  - 发起录入出单请求 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第82行  - 本年度已出过保单,提交覆盖 
[2020-12-28 22:12:33] [INFO] >> CustomerList.py >> 第96行  - 获取响应message校验是否出单成功 
[2020-12-28 22:12:34] [INFO] >> CustomerList.py >> 第102行  - 出单成功，校验buid[600976286]是否一致 
[2020-12-28 22:12:34] [INFO] >> CustomerList.py >> 第105行  - 校验出单状态、录入保司、金额是否一致 
[2020-12-28 22:12:34] [INFO] >> CustomerList.py >> 第108行  - 出单成功 
[2020-12-28 22:12:34] [INFO] >> chudanzhanbai.py >> 第21行  - 出单列表查询 
[2020-12-28 22:12:34] [INFO] >> chudanzhanbai.py >> 第32行  - 出单列表查询通过 
[2020-12-28 22:12:34] [INFO] >> Test_case.py >> 第49行  - 顶级账户计划回访数据量对比，使用账号：jiao 
[2020-12-28 22:12:34] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:12:34] [INFO] >> CustomerList.py >> 第363行  - 获取接口返回的计划回访数量 
[2020-12-28 22:12:35] [INFO] >> CustomerList.py >> 第375行  - 列表形式返回计划回访数量：[0, 294, 322, 308, 155, 85, 71, 253, 203] 
[2020-12-28 22:12:35] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:35] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:38] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:38] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:39] [INFO] >> Test_case.py >> 第72行  - 校验报价成功的数据是否有报价历史 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第401行  - 返回筛选结果 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第409行  - 获取报价历史 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第414行  - 返回报价历史结果 
[2020-12-28 22:12:39] [INFO] >> Test_case.py >> 第82行  - 校验切换报价历史是否成功 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第401行  - 返回筛选结果 
[2020-12-28 22:12:39] [INFO] >> CustomerList.py >> 第409行  - 获取报价历史 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第414行  - 返回报价历史结果 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第422行  - 根据报价历史id切换报价历史 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第427行  - 报价历史已切换 
[2020-12-28 22:12:40] [INFO] >> Test_case.py >> 第102行  - 下级账户计划回访数据量对比,使用账号：18612938273 
[2020-12-28 22:12:40] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第363行  - 获取接口返回的计划回访数量 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第375行  - 列表形式返回计划回访数量：[0, 48, 28, 14, 21, 17, 13, 31, 77] 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:40] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:12:41] [INFO] >> Test_case.py >> 第125行  - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-28 22:12:41] [INFO] >> Test_case.py >> 第126行  - 执行分配用例 
[2020-12-28 22:12:41] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第248行  - 客户列表分配 
[2020-12-28 22:12:41] [INFO] >> CustomerList.py >> 第255行  - 获取客户列表全部客户的数据 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第261行  - 拿到前4个buid 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第273行  - 分配数据[[600976286, 365114671, 600996697, 600996696]]给ID为(287523)的用户 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第283行  - 校验分配人员是否匹配 
[2020-12-28 22:12:42] [INFO] >> Test_case.py >> 第134行  - 使用全部客户第5条数据录入战败 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第434行  - 获取全部客户数据 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第128行  - 录入战败 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第130行  - 客户列表查询苏A6P919是否存在 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第27行  - 获取苏A6P919查询结果 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:12:42] [INFO] >> CustomerList.py >> 第133行  - 校验查询结果是否为真 
[2020-12-28 22:12:43] [INFO] >> CustomerList.py >> 第152行  - 录入战败通过 
[2020-12-28 22:12:43] [INFO] >> chudanzhanbai.py >> 第46行  - 战败列表查询 
[2020-12-28 22:12:43] [INFO] >> chudanzhanbai.py >> 第57行  - 战败列表查询通过 
[2020-12-28 22:12:43] [INFO] >> run_case.py >> 第34行  - 发送邮件 
[2020-12-28 22:25:29] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2020-12-28 22:25:29] [INFO] >> Headers.py >> 第40行  - token更新到config文件 
[2020-12-28 22:25:29] [INFO] >> Headers.py >> 第42行  - 返回token 
[2020-12-28 22:25:29] [INFO] >> Test_case.py >> 第35行  - 新增数据——录入出单流程 
[2020-12-28 22:25:29] [INFO] >> Interface_quote.py >> 第22行  - 京AC1122发起续保 
[2020-12-28 22:25:29] [INFO] >> Interface_quote.py >> 第41行  - 获取续保响应结果 
[2020-12-28 22:25:30] [INFO] >> Interface_quote.py >> 第44行  - 新增车牌成功 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第27行  - 获取京AC1122查询结果 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第46行  - 根据buid录入出单，默认录入人保 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第49行  - 客户列表查询京AC1122是否存在 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第27行  - 获取京AC1122查询结果 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第54行  - 查询结果拿第一个buid 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第63行  - 发起录入出单请求 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第82行  - 本年度已出过保单,提交覆盖 
[2020-12-28 22:25:30] [INFO] >> CustomerList.py >> 第96行  - 获取响应message校验是否出单成功 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第102行  - 出单成功，校验buid[600976286]是否一致 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第105行  - 校验出单状态、录入保司、金额是否一致 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第108行  - 出单成功 
[2020-12-28 22:25:31] [INFO] >> chudanzhanbai.py >> 第21行  - 出单列表查询 
[2020-12-28 22:25:31] [INFO] >> chudanzhanbai.py >> 第32行  - 出单列表查询通过 
[2020-12-28 22:25:31] [INFO] >> Test_case.py >> 第49行  - 顶级账户计划回访数据量对比，使用账号：jiao 
[2020-12-28 22:25:31] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第363行  - 获取接口返回的计划回访数量 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第375行  - 列表形式返回计划回访数量：[0, 294, 322, 308, 155, 85, 71, 253, 203] 
[2020-12-28 22:25:31] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:32] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:32] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:32] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:33] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:33] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:34] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:34] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:34] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:35] [INFO] >> Test_case.py >> 第72行  - 校验报价成功的数据是否有报价历史 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第401行  - 返回筛选结果 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第409行  - 获取报价历史 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第414行  - 返回报价历史结果 
[2020-12-28 22:25:35] [INFO] >> Test_case.py >> 第82行  - 校验切换报价历史是否成功 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第394行  - 筛选报价成功数据 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第401行  - 返回筛选结果 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第409行  - 获取报价历史 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第414行  - 返回报价历史结果 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第422行  - 根据报价历史id切换报价历史 
[2020-12-28 22:25:35] [INFO] >> CustomerList.py >> 第427行  - 报价历史已切换 
[2020-12-28 22:25:35] [INFO] >> Test_case.py >> 第102行  - 下级账户计划回访数据量对比,使用账号：18612938273 
[2020-12-28 22:25:36] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第363行  - 获取接口返回的计划回访数量 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第375行  - 列表形式返回计划回访数量：[0, 48, 28, 14, 21, 17, 13, 31, 77] 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:36] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第383行  - 循环获取计划回访每个TAB页的数据 
[2020-12-28 22:25:37] [INFO] >> Test_case.py >> 第125行  - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-28 22:25:37] [INFO] >> Test_case.py >> 第126行  - 执行分配用例 
[2020-12-28 22:25:37] [INFO] >> Headers.py >> 第64行  - 返回token 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第248行  - 客户列表分配 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第255行  - 获取客户列表全部客户的数据 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第261行  - 拿到前4个buid 
[2020-12-28 22:25:37] [INFO] >> CustomerList.py >> 第273行  - 分配数据[[600976286, 600996697, 600996696, 365114671]]给ID为(287523)的用户 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第283行  - 校验分配人员是否匹配 
[2020-12-28 22:25:38] [INFO] >> Test_case.py >> 第134行  - 使用全部客户第5条数据录入战败 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第434行  - 获取全部客户数据 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第128行  - 录入战败 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第130行  - 客户列表查询京AC1122是否存在 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第27行  - 获取京AC1122查询结果 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第31行  - 客户列表查询车牌通过 
[2020-12-28 22:25:38] [INFO] >> CustomerList.py >> 第133行  - 校验查询结果是否为真 
[2020-12-28 22:25:39] [INFO] >> CustomerList.py >> 第177行  - 录入战败通过 
[2020-12-28 22:25:39] [INFO] >> chudanzhanbai.py >> 第46行  - 战败列表查询 
[2020-12-28 22:25:39] [INFO] >> chudanzhanbai.py >> 第57行  - 战败列表查询通过 
[2020-12-28 22:25:39] [INFO] >> run_case.py >> 第34行  - 发送邮件 
