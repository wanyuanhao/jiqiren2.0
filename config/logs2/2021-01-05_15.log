[2021-01-05 15:27:02] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2021-01-05 15:27:02] [INFO] >> Headers.py >> 第40行  - token更新到config文件 
[2021-01-05 15:27:02] [INFO] >> Headers.py >> 第42行  - 返回token 
[2021-01-05 15:27:02] [INFO] >> TestCase.py >> 第35行  - 用例：新增数据——录入出单流程 
[2021-01-05 15:27:02] [INFO] >> Interface_quote.py >> 第22行  - 京AC1122发起续保 
[2021-01-05 15:27:03] [INFO] >> Interface_quote.py >> 第41行  - 获取续保响应结果 
[2021-01-05 15:27:03] [INFO] >> Interface_quote.py >> 第44行  - 新增车牌成功 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第28行  - 获取京AC1122查询结果 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第32行  - 客户列表查询车牌通过 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第47行  - 根据buid录入出单，默认录入人保 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第50行  - 客户列表查询京AC1122是否存在 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第28行  - 获取京AC1122查询结果 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第32行  - 客户列表查询车牌通过 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第55行  - 查询结果拿第一个buid 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第64行  - 发起录入出单请求 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第85行  - 本年度已出过保单,提交覆盖 
[2021-01-05 15:27:03] [INFO] >> CustomerList.py >> 第99行  - 获取响应message校验是否出单成功 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第107行  - 出单成功，校验buid[600976286]是否一致 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第110行  - 校验出单状态、录入保司、金额是否一致 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第113行  - 出单成功 
[2021-01-05 15:27:06] [INFO] >> chudanzhanbai.py >> 第21行  - 出单列表查询 
[2021-01-05 15:27:06] [INFO] >> chudanzhanbai.py >> 第32行  - 出单列表查询通过 
[2021-01-05 15:27:06] [INFO] >> TestCase.py >> 第48行  - 用例：顶级账户计划回访数据量对比，使用账号：jiao 
[2021-01-05 15:27:06] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第373行  - 获取接口返回的计划回访数量 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第385行  - 列表形式返回计划回访数量：[250, 280, 320, 276, 53, 38, 164, 100, 101] 
[2021-01-05 15:27:06] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:07] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:07] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:08] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:08] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:09] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:09] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:09] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:10] [INFO] >> TestCase.py >> 第71行  - 用例：校验报价成功的数据是否有报价历史 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第404行  - 筛选报价成功数据 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第411行  - 返回筛选结果 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第419行  - 获取报价历史 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第424行  - 返回报价历史结果 
[2021-01-05 15:27:10] [INFO] >> TestCase.py >> 第81行  - 用例：校验切换报价历史是否成功 
[2021-01-05 15:27:10] [INFO] >> CustomerList.py >> 第404行  - 筛选报价成功数据 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第411行  - 返回筛选结果 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第419行  - 获取报价历史 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第424行  - 返回报价历史结果 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第432行  - 根据报价历史id切换报价历史 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第437行  - 报价历史已切换 
[2021-01-05 15:27:11] [INFO] >> TestCase.py >> 第101行  - 用例：下级账户计划回访数据量对比,使用账号：18612938273 
[2021-01-05 15:27:11] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第373行  - 获取接口返回的计划回访数量 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第385行  - 列表形式返回计划回访数量：[40, 48, 21, 28, 15, 14, 36, 13, 25] 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:11] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:12] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:13] [INFO] >> CustomerList.py >> 第393行  - 循环获取计划回访每个TAB页的数据 
[2021-01-05 15:27:14] [INFO] >> TestCase.py >> 第124行  - 用例：客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2021-01-05 15:27:14] [INFO] >> TestCase.py >> 第125行  - 执行分配用例 
[2021-01-05 15:27:14] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-05 15:27:14] [INFO] >> CustomerList.py >> 第258行  - 客户列表分配 
[2021-01-05 15:27:14] [INFO] >> CustomerList.py >> 第265行  - 获取客户列表全部客户的数据 
[2021-01-05 15:27:14] [INFO] >> CustomerList.py >> 第271行  - 拿到前4个buid 
[2021-01-05 15:27:14] [INFO] >> CustomerList.py >> 第283行  - 分配数据[[600976286, 600996694, 600996695, 600309493]]给ID为(287523)的用户 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第293行  - 校验分配人员是否匹配 
[2021-01-05 15:27:15] [INFO] >> TestCase.py >> 第133行  - 用例：使用全部客户第5条数据录入战败 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第444行  - 获取全部客户数据 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第133行  - 录入战败 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第135行  - 客户列表查询京KHB152是否存在 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第28行  - 获取京KHB152查询结果 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第32行  - 客户列表查询车牌通过 
[2021-01-05 15:27:15] [INFO] >> CustomerList.py >> 第138行  - 校验查询结果是否为真 
[2021-01-05 15:27:17] [INFO] >> CustomerList.py >> 第158行  - 录入战败通过 
[2021-01-05 15:27:17] [INFO] >> chudanzhanbai.py >> 第46行  - 战败列表查询 
[2021-01-05 15:27:18] [INFO] >> chudanzhanbai.py >> 第57行  - 战败列表查询通过 
[2021-01-05 15:27:18] [INFO] >> TestCase.py >> 第143行  - 用例：使用全部客户第8条数据录入续保跟进 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第444行  - 获取全部客户数据 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第461行  - [buid:600996696]录入普通跟进 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第467行  - 请求录入跟进 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第469行  - 返回录入跟进响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-05 15:27:18] [INFO] >> TestCase.py >> 第151行  - 用例：客户列表不筛选导出全部客户TAB数据 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第476行  - 客户列表导出 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第483行  - 返回导出响应结果：{'code': 10003, 'message': '请求发生异常', 'data': None} 
[2021-01-05 15:27:18] [INFO] >> TestCase.py >> 第157行  - 用例：客户列表筛选（战败）导出全部客户数据 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第486行  - 客户列表导出 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第494行  - 返回导出响应结果：{'code': 10003, 'message': '请求发生异常', 'data': None} 
[2021-01-05 15:27:18] [INFO] >> TestCase.py >> 第164行  - 用例：定保录入成功预约 
[2021-01-05 15:27:18] [INFO] >> CustomerList.py >> 第444行  - 获取全部客户数据 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第503行  - 定保录入成功预约 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第511行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第513行  - 定保录入成功 
[2021-01-05 15:27:19] [INFO] >> TestCase.py >> 第172行  - 用例：定保录入战败 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第444行  - 获取全部客户数据 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第530行  - 定保录入战败 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第538行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-05 15:27:19] [INFO] >> CustomerList.py >> 第540行  - 定保录入成功 
[2021-01-05 15:27:19] [INFO] >> run_case.py >> 第34行  - 发送邮件 
