[2021-01-18 22:30:03] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2021-01-18 22:30:03] [INFO] >> Headers.py >> 第40行  - token更新到config文件 
[2021-01-18 22:30:03] [INFO] >> Headers.py >> 第42行  - 返回token 
[2021-01-18 22:30:03] [INFO] >> TestCase.py >> 第40行  - 用例：新增数据——录入出单流程 
[2021-01-18 22:30:03] [INFO] >> Interface_quote.py >> 第24行  - 京AC1122发起续保 
[2021-01-18 22:30:04] [INFO] >> Interface_quote.py >> 第43行  - 获取续保响应结果 
[2021-01-18 22:30:04] [INFO] >> Interface_quote.py >> 第49行  - 获取续保结果异常：{'code': -1, 'message': '"这个时间段(22:30-06:30不再提供服务)"', 'data': {'buid': 600976286}} 
[2021-01-18 22:30:04] [INFO] >> TestCase.py >> 第52行  - 用例：顶级账户计划回访数据量对比，使用账号：jiao 
[2021-01-18 22:30:04] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:30:04] [INFO] >> CustomerList.py >> 第374行  - 获取接口返回的计划回访数量 
[2021-01-18 22:30:04] [INFO] >> CustomerList.py >> 第386行  - 列表形式返回计划回访数量：[1, 305, 250, 346, 282, 98, 78, 152, 236] 
[2021-01-18 22:30:04] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:05] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:05] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:06] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:07] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:07] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:07] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:08] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:08] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:09] [INFO] >> TestCase.py >> 第75行  - 用例：校验报价成功的数据是否有报价历史 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第405行  - 筛选报价成功数据 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第412行  - 返回筛选结果 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第420行  - 获取报价历史 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第425行  - 返回报价历史结果 
[2021-01-18 22:30:09] [INFO] >> TestCase.py >> 第85行  - 用例：校验切换报价历史是否成功 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第405行  - 筛选报价成功数据 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第412行  - 返回筛选结果 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第420行  - 获取报价历史 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第425行  - 返回报价历史结果 
[2021-01-18 22:30:09] [INFO] >> CustomerList.py >> 第433行  - 根据报价历史id切换报价历史 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第438行  - 报价历史已切换 
[2021-01-18 22:30:10] [INFO] >> TestCase.py >> 第105行  - 用例：下级账户计划回访数据量对比,使用账号：18612938273 
[2021-01-18 22:30:10] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第374行  - 获取接口返回的计划回访数量 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第386行  - 列表形式返回计划回访数量：[0, 42, 25, 2, 17, 39, 21, 32, 29] 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:10] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:30:11] [INFO] >> TestCase.py >> 第130行  - 用例：客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2021-01-18 22:30:11] [INFO] >> TestCase.py >> 第131行  - 执行分配用例 
[2021-01-18 22:30:12] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第259行  - 客户列表分配 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第266行  - 获取客户列表全部客户的数据 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第272行  - 拿到前4个buid 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第284行  - 分配数据[[601000856, 601002995, 601002989, 600996564]]给ID为(287523)的用户 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第294行  - 校验分配人员是否匹配 
[2021-01-18 22:30:12] [INFO] >> TestCase.py >> 第139行  - 用例：使用全部客户第5条数据录入战败 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第134行  - 录入战败 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第136行  - 客户列表查询苏A5N70Y是否存在 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第29行  - 获取苏A5N70Y查询结果 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第33行  - 客户列表查询车牌通过 
[2021-01-18 22:30:12] [INFO] >> CustomerList.py >> 第139行  - 校验查询结果是否为真 
[2021-01-18 22:30:15] [INFO] >> CustomerList.py >> 第159行  - 录入战败通过 
[2021-01-18 22:30:15] [INFO] >> chudan_and_zhanbai.py >> 第51行  - 战败列表查询 
[2021-01-18 22:30:15] [INFO] >> chudan_and_zhanbai.py >> 第62行  - 战败列表查询通过 
[2021-01-18 22:30:15] [INFO] >> TestCase.py >> 第149行  - 用例：使用全部客户第8条数据录入续保跟进 
[2021-01-18 22:30:15] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:30:15] [INFO] >> CustomerList.py >> 第463行  - [buid:600965571]录入普通跟进 
[2021-01-18 22:30:15] [INFO] >> CustomerList.py >> 第469行  - 请求录入跟进 
[2021-01-18 22:30:16] [INFO] >> CustomerList.py >> 第471行  - 返回录入跟进响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:30:16] [INFO] >> TestCase.py >> 第157行  - 用例：客户列表不筛选导出全部客户TAB数据 
[2021-01-18 22:30:16] [INFO] >> CustomerList.py >> 第479行  - 客户列表导出 
[2021-01-18 22:30:20] [INFO] >> CustomerList.py >> 第486行  - 返回导出响应结果：{'code': 1, 'message': '操作成功', 'data': 'https://image.91bihu.com/customer/2021/1/18/171383/1c409e00aba74991877923acac72e17f.zip'} 
[2021-01-18 22:30:20] [INFO] >> TestCase.py >> 第163行  - 用例：客户列表筛选（战败）导出全部客户数据 
[2021-01-18 22:30:20] [INFO] >> CustomerList.py >> 第489行  - 客户列表导出 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第497行  - 返回导出响应结果：{'code': 1, 'message': '操作成功', 'data': 'https://image.91bihu.com/customer/2021/1/18/171383/1bd4c5034bdf4f9e8bad11ae6b573fca.zip'} 
[2021-01-18 22:30:22] [INFO] >> TestCase.py >> 第170行  - 用例：定保录入成功预约 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第506行  - 定保录入成功预约 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第514行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第516行  - 定保录入成功:{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:30:22] [INFO] >> TestCase.py >> 第178行  - 用例：定保录入战败 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:30:22] [INFO] >> CustomerList.py >> 第534行  - 定保录入战败 
[2021-01-18 22:30:23] [INFO] >> CustomerList.py >> 第543行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:30:23] [INFO] >> CustomerList.py >> 第545行  - 定保录入成功 
[2021-01-18 22:30:23] [INFO] >> TestCase.py >> 第186行  - 用例：批量续保文件上传 
[2021-01-18 22:30:23] [INFO] >> CustomerList.py >> 第564行  - 上传文件 
[2021-01-18 22:30:23] [INFO] >> CustomerList.py >> 第571行  - 文件已上传到服务器：BatchRenewal/2021/1/18/171383/28af646f2b744a81b6687f14d2aa76a9.xlsx 
[2021-01-18 22:30:23] [INFO] >> CustomerList.py >> 第572行  - 默认FindDeptId: 2869（部门ID），只适用于wanyuanhao账号，上传城市为【北京】 
[2021-01-18 22:30:24] [INFO] >> CustomerList.py >> 第580行  - 文件上传成功：{'data': {'isValid': True, 'name': '自动化上传.xlsx', 'batchRenewalId': 401357}, 'code': 1, 'message': '上传成功'} 
[2021-01-18 22:30:24] [INFO] >> CustomerList.py >> 第595行  - 通过上传响应结果校验列表是否存在该批次，响应信息:{'data': {'isValid': True, 'name': '自动化上传.xlsx', 'batchRenewalId': 401357}, 'code': 1, 'message': '上传成功'} 
[2021-01-18 22:30:24] [INFO] >> CustomerList.py >> 第599行  - 等待3秒获取列表批次，校验ID是否存在列表 
[2021-01-18 22:30:27] [INFO] >> TestCase.py >> 第195行  - 用例：工作看板人员效能统计，校验录入出单、保费是否有统计 
[2021-01-18 22:30:28] [INFO] >> TestCase.py >> 第198行  - 校验人员效能响应结果是否为None ：{'code': 1, 'message': '成功', 'data': {'employeeId': 0, 'employeeName': None, 'compId': 0, 'insurancedCount': 3, 'defeatCount': 2, 'insuranceAmount': 3587.22, 'bizAmount': 2001.98, 'forceAmount': 1111.22, 'taxAmount': 30.02, 'jyPrice': 444.0, 'reviewCount': 7, 'actualReviewCount': 0, 'planReviewCount': 0, 'dueToStoretCount': 0, 'entryCount': 0, 'callTime': 0.0, 'callCount': 0, 'avgCallTime': 0.0, 'renewalInquiryCount': 1, 'quotationCount': 0, 'quotationNumber': 0, 'smsSendCount': 0}} 
[2021-01-18 22:30:28] [INFO] >> TestCase.py >> 第212行  - 获取客户列表buid 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第48行  - 根据buid录入出单，默认录入人保 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第51行  - 客户列表查询苏A88LT1是否存在 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第29行  - 获取苏A88LT1查询结果 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第33行  - 客户列表查询车牌通过 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第56行  - 查询结果拿第一个buid 
[2021-01-18 22:30:28] [INFO] >> CustomerList.py >> 第65行  - 发起录入出单请求 
[2021-01-18 22:30:29] [INFO] >> CustomerList.py >> 第68行  - message响应成功 
[2021-01-18 22:30:31] [INFO] >> CustomerList.py >> 第74行  - 获取响应message校验是否出单成功 
[2021-01-18 22:30:31] [INFO] >> CustomerList.py >> 第79行  - 出单成功 
[2021-01-18 22:30:36] [INFO] >> TestCase.py >> 第226行  - 二次获取人员效能响应结果，断言响应结果是否为None ：{'code': 1, 'message': '成功', 'data': {'employeeId': 0, 'employeeName': None, 'compId': 0, 'insurancedCount': 4, 'defeatCount': 2, 'insuranceAmount': 5325.33, 'bizAmount': 3002.97, 'forceAmount': 1611.33, 'taxAmount': 45.03, 'jyPrice': 666.0, 'reviewCount': 8, 'actualReviewCount': 0, 'planReviewCount': 0, 'dueToStoretCount': 0, 'entryCount': 0, 'callTime': 0.0, 'callCount': 0, 'avgCallTime': 0.0, 'renewalInquiryCount': 1, 'quotationCount': 0, 'quotationNumber': 0, 'smsSendCount': 0}} 
[2021-01-18 22:30:36] [INFO] >> TestCase.py >> 第230行  - 历史出单台次：3+1，出单后台次：4 
[2021-01-18 22:30:36] [INFO] >> TestCase.py >> 第232行  - 历史出单金额：3587.22+1738.11，出单后金额：5325.33 
[2021-01-18 22:30:36] [INFO] >> run_case.py >> 第34行  - 发送邮件 
[2021-01-18 22:57:52] [INFO] >> run_case.py >> 第17行  - 登录账户获取touken 
[2021-01-18 22:57:52] [INFO] >> Headers.py >> 第40行  - token更新到config文件 
[2021-01-18 22:57:52] [INFO] >> Headers.py >> 第42行  - 返回token 
[2021-01-18 22:57:52] [INFO] >> TestCase.py >> 第41行  - 用例：新增数据——录入出单流程 
[2021-01-18 22:57:52] [INFO] >> Interface_quote.py >> 第24行  - 京AC1122发起续保 
[2021-01-18 22:57:52] [INFO] >> Interface_quote.py >> 第43行  - 获取续保响应结果 
[2021-01-18 22:57:53] [INFO] >> Interface_quote.py >> 第49行  - 获取续保结果异常：{'code': -1, 'message': '"这个时间段(22:30-06:30不再提供服务)"', 'data': {'buid': 600976286}} 
[2021-01-18 22:57:53] [INFO] >> TestCase.py >> 第54行  - 用例：顶级账户计划回访数据量对比，使用账号：jiao 
[2021-01-18 22:57:53] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:57:53] [INFO] >> CustomerList.py >> 第374行  - 获取接口返回的计划回访数量 
[2021-01-18 22:57:53] [INFO] >> CustomerList.py >> 第386行  - 列表形式返回计划回访数量：[1, 305, 250, 346, 282, 98, 78, 152, 236] 
[2021-01-18 22:57:53] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:54] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:55] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:55] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:56] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:56] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:57] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:57] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:57] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:57:58] [INFO] >> TestCase.py >> 第77行  - 用例：校验报价成功的数据是否有报价历史 
[2021-01-18 22:57:58] [INFO] >> CustomerList.py >> 第405行  - 筛选报价成功数据 
[2021-01-18 22:57:58] [INFO] >> CustomerList.py >> 第412行  - 返回筛选结果 
[2021-01-18 22:57:58] [INFO] >> CustomerList.py >> 第420行  - 获取报价历史 
[2021-01-18 22:57:58] [INFO] >> CustomerList.py >> 第425行  - 返回报价历史结果 
[2021-01-18 22:57:58] [INFO] >> TestCase.py >> 第87行  - 用例：校验切换报价历史是否成功 
[2021-01-18 22:57:58] [INFO] >> CustomerList.py >> 第405行  - 筛选报价成功数据 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第412行  - 返回筛选结果 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第420行  - 获取报价历史 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第425行  - 返回报价历史结果 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第433行  - 根据报价历史id切换报价历史 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第438行  - 报价历史已切换 
[2021-01-18 22:57:59] [INFO] >> TestCase.py >> 第107行  - 用例：下级账户计划回访数据量对比,使用账号：18612938273 
[2021-01-18 22:57:59] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:57:59] [INFO] >> CustomerList.py >> 第374行  - 获取接口返回的计划回访数量 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第386行  - 列表形式返回计划回访数量：[0, 42, 25, 2, 17, 39, 21, 32, 29] 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:00] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:01] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:01] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:01] [INFO] >> CustomerList.py >> 第394行  - 循环获取计划回访每个TAB页的数据 
[2021-01-18 22:58:01] [INFO] >> TestCase.py >> 第132行  - 用例：客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2021-01-18 22:58:01] [INFO] >> TestCase.py >> 第133行  - 执行分配用例 
[2021-01-18 22:58:01] [INFO] >> Headers.py >> 第64行  - 返回token 
[2021-01-18 22:58:01] [INFO] >> CustomerList.py >> 第259行  - 客户列表分配 
[2021-01-18 22:58:01] [INFO] >> CustomerList.py >> 第266行  - 获取客户列表全部客户的数据 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第272行  - 拿到前4个buid 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第284行  - 分配数据[[600996553, 601002995, 601006446, 600965571]]给ID为(287523)的用户 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第294行  - 校验分配人员是否匹配 
[2021-01-18 22:58:02] [INFO] >> TestCase.py >> 第141行  - 用例：使用全部客户第5条数据录入战败 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第134行  - 录入战败 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第136行  - 客户列表查询苏A5N70Y是否存在 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第29行  - 获取苏A5N70Y查询结果 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第33行  - 客户列表查询车牌通过 
[2021-01-18 22:58:02] [INFO] >> CustomerList.py >> 第139行  - 校验查询结果是否为真 
[2021-01-18 22:58:03] [INFO] >> CustomerList.py >> 第170行  - carPolicyId为None，替换成deteatId 
[2021-01-18 22:58:05] [INFO] >> CustomerList.py >> 第187行  - 录入战败通过 
[2021-01-18 22:58:05] [INFO] >> chudan_and_zhanbai.py >> 第51行  - 战败列表查询 
[2021-01-18 22:58:06] [INFO] >> chudan_and_zhanbai.py >> 第62行  - 战败列表查询通过 
[2021-01-18 22:58:06] [INFO] >> TestCase.py >> 第151行  - 用例：使用全部客户第8条数据录入续保跟进 
[2021-01-18 22:58:06] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:58:06] [INFO] >> CustomerList.py >> 第463行  - [buid:601000856]录入普通跟进 
[2021-01-18 22:58:06] [INFO] >> CustomerList.py >> 第469行  - 请求录入跟进 
[2021-01-18 22:58:06] [INFO] >> CustomerList.py >> 第471行  - 返回录入跟进响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:58:06] [INFO] >> TestCase.py >> 第159行  - 用例：客户列表不筛选导出全部客户TAB数据 
[2021-01-18 22:58:06] [INFO] >> CustomerList.py >> 第479行  - 客户列表导出 
[2021-01-18 22:58:11] [INFO] >> CustomerList.py >> 第486行  - 返回导出响应结果：{'code': 1, 'message': '操作成功', 'data': 'https://image.91bihu.com/customer/2021/1/18/171383/9d95cb1bf9f2411fbdcced350b368187.zip'} 
[2021-01-18 22:58:11] [INFO] >> TestCase.py >> 第165行  - 用例：客户列表筛选（战败）导出全部客户数据 
[2021-01-18 22:58:11] [INFO] >> CustomerList.py >> 第489行  - 客户列表导出 
[2021-01-18 22:58:12] [INFO] >> CustomerList.py >> 第497行  - 返回导出响应结果：{'code': 1, 'message': '操作成功', 'data': 'https://image.91bihu.com/customer/2021/1/18/171383/c2e19260c6a043a79dc0d427835d68ac.zip'} 
[2021-01-18 22:58:12] [INFO] >> TestCase.py >> 第172行  - 用例：定保录入成功预约 
[2021-01-18 22:58:12] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:58:13] [INFO] >> CustomerList.py >> 第506行  - 定保录入成功预约 
[2021-01-18 22:58:13] [INFO] >> CustomerList.py >> 第514行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:58:13] [INFO] >> CustomerList.py >> 第516行  - 定保录入成功:{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:58:13] [INFO] >> TestCase.py >> 第180行  - 用例：定保录入战败 
[2021-01-18 22:58:13] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:58:13] [INFO] >> CustomerList.py >> 第534行  - 定保录入战败 
[2021-01-18 22:58:14] [INFO] >> CustomerList.py >> 第543行  - 校验响应结果：{'data': {'coverCode': 0, 'deteatId': None, 'carPolicyId': None}, 'code': 1, 'message': '成功'} 
[2021-01-18 22:58:14] [INFO] >> CustomerList.py >> 第545行  - 定保录入成功 
[2021-01-18 22:58:14] [INFO] >> TestCase.py >> 第188行  - 用例：批量续保文件上传 
[2021-01-18 22:58:14] [INFO] >> CustomerList.py >> 第564行  - 上传文件 
[2021-01-18 22:58:14] [INFO] >> CustomerList.py >> 第571行  - 文件已上传到服务器：BatchRenewal/2021/1/18/171383/49c5df2ce1914227b4463395e5678c9e.xlsx 
[2021-01-18 22:58:14] [INFO] >> CustomerList.py >> 第572行  - 默认FindDeptId: 2869（部门ID），只适用于wanyuanhao账号，上传城市为【北京】 
[2021-01-18 22:58:15] [INFO] >> CustomerList.py >> 第580行  - 文件上传成功：{'data': {'isValid': True, 'name': '自动化上传.xlsx', 'batchRenewalId': 401358}, 'code': 1, 'message': '上传成功'} 
[2021-01-18 22:58:15] [INFO] >> CustomerList.py >> 第595行  - 通过上传响应结果校验列表是否存在该批次，响应信息:{'data': {'isValid': True, 'name': '自动化上传.xlsx', 'batchRenewalId': 401358}, 'code': 1, 'message': '上传成功'} 
[2021-01-18 22:58:15] [INFO] >> CustomerList.py >> 第599行  - 等待3秒获取列表批次，校验ID是否存在列表 
[2021-01-18 22:58:19] [INFO] >> TestCase.py >> 第197行  - 用例：工作看板人员效能统计，校验录入出单、保费是否有统计 
[2021-01-18 22:58:19] [INFO] >> TestCase.py >> 第200行  - 校验人员效能响应结果是否为None ：{'code': 1, 'message': '成功', 'data': {'employeeId': 0, 'employeeName': None, 'compId': 0, 'insurancedCount': 5, 'defeatCount': 2, 'insuranceAmount': 5336.33, 'bizAmount': 3002.97, 'forceAmount': 1622.33, 'taxAmount': 45.03, 'jyPrice': 666.0, 'reviewCount': 10, 'actualReviewCount': 0, 'planReviewCount': 0, 'dueToStoretCount': 0, 'entryCount': 0, 'callTime': 0.0, 'callCount': 0, 'avgCallTime': 0.0, 'renewalInquiryCount': 1, 'quotationCount': 0, 'quotationNumber': 0, 'smsSendCount': 0}} 
[2021-01-18 22:58:19] [INFO] >> TestCase.py >> 第214行  - 获取客户列表buid 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第445行  - 获取全部客户数据 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第48行  - 根据buid录入出单，默认录入人保 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第51行  - 客户列表查询LZWADAGA4GF315014是否存在 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第29行  - 获取LZWADAGA4GF315014查询结果 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第33行  - 客户列表查询车牌通过 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第56行  - 查询结果拿第一个buid 
[2021-01-18 22:58:19] [INFO] >> CustomerList.py >> 第65行  - 发起录入出单请求 
[2021-01-18 22:58:20] [INFO] >> CustomerList.py >> 第68行  - message响应成功 
[2021-01-18 22:58:22] [INFO] >> CustomerList.py >> 第74行  - 获取响应message校验是否出单成功 
[2021-01-18 22:58:22] [INFO] >> CustomerList.py >> 第79行  - 出单成功 
[2021-01-18 22:58:27] [INFO] >> TestCase.py >> 第228行  - 二次获取人员效能响应结果，断言响应结果是否为None ：{'code': 1, 'message': '成功', 'data': {'employeeId': 0, 'employeeName': None, 'compId': 0, 'insurancedCount': 6, 'defeatCount': 2, 'insuranceAmount': 7074.44, 'bizAmount': 4003.96, 'forceAmount': 2122.44, 'taxAmount': 60.04, 'jyPrice': 888.0, 'reviewCount': 11, 'actualReviewCount': 0, 'planReviewCount': 0, 'dueToStoretCount': 0, 'entryCount': 0, 'callTime': 0.0, 'callCount': 0, 'avgCallTime': 0.0, 'renewalInquiryCount': 1, 'quotationCount': 0, 'quotationNumber': 0, 'smsSendCount': 0}} 
[2021-01-18 22:58:27] [INFO] >> TestCase.py >> 第232行  - 历史出单台次：5+1，出单后台次：6 
[2021-01-18 22:58:27] [INFO] >> TestCase.py >> 第234行  - 历史出单金额：5336.33+1738.11，出单后金额：7074.44 
[2021-01-18 22:58:27] [INFO] >> run_case.py >> 第34行  - 发送邮件 
