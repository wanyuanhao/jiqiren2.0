[2020-12-14 19:03:53] [INFO] >> run_case.py >> 第17行 - run_case - 登录账户获取touken 
[2020-12-14 19:03:54] [INFO] >> Test_case.py >> 第35行 - Test_case - 新增数据——录入出单流程 
[2020-12-14 19:03:54] [INFO] >> Interface_quote.py >> 第22行 - 新增报价 - 京AC1122发起续保 
[2020-12-14 19:03:54] [INFO] >> Interface_quote.py >> 第41行 - 新增报价 - 获取续保响应结果 
[2020-12-14 19:03:54] [INFO] >> Interface_quote.py >> 第44行 - 新增报价 - 新增车牌成功 
[2020-12-14 19:03:54] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京AC1122查询结果 
[2020-12-14 19:03:55] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:03:55] [INFO] >> CustomerList.py >> 第46行 - CustomerList - 根据buid录入出单，默认录入人保 
[2020-12-14 19:03:55] [INFO] >> CustomerList.py >> 第49行 - CustomerList - 客户列表查询京AC1122是否存在 
[2020-12-14 19:03:55] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京AC1122查询结果 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第54行 - CustomerList - 查询结果拿第一个buid 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第63行 - CustomerList - 发起录入出单请求 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第82行 - CustomerList - 本年度已出过保单,提交覆盖 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第96行 - CustomerList - 获取响应message校验是否出单成功 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第102行 - CustomerList - 出单成功，校验buid[600976286]是否一致 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第105行 - CustomerList - 校验出单状态、录入保司、金额是否一致 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第108行 - CustomerList - 出单成功 
[2020-12-14 19:03:56] [INFO] >> chudanzhanbai.py >> 第21行 - 出单战败查询 - 出单列表查询 
[2020-12-14 19:03:56] [INFO] >> chudanzhanbai.py >> 第32行 - 出单战败查询 - 出单列表查询通过 
[2020-12-14 19:03:56] [INFO] >> Test_case.py >> 第49行 - Test_case - 顶级账户计划回访数据量对比，使用账号：jiao 
[2020-12-14 19:03:56] [INFO] >> CustomerList.py >> 第363行 - CustomerList - 获取接口返回的计划回访数量 
[2020-12-14 19:03:57] [INFO] >> CustomerList.py >> 第375行 - CustomerList - 列表形式返回计划回访数量：[0, 336, 305, 278, 234, 37, 76, 133, 88] 
[2020-12-14 19:03:57] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:03:57] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:01] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:05] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:05] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:06] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:09] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:09] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:10] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:10] [INFO] >> Test_case.py >> 第72行 - Test_case - 校验报价成功的数据是否有报价历史 
[2020-12-14 19:04:10] [INFO] >> CustomerList.py >> 第394行 - CustomerList - 筛选报价成功数据 
[2020-12-14 19:04:10] [INFO] >> CustomerList.py >> 第401行 - CustomerList - 返回筛选结果 
[2020-12-14 19:04:10] [INFO] >> CustomerList.py >> 第409行 - CustomerList - 获取报价历史 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第414行 - CustomerList - 返回报价历史结果 
[2020-12-14 19:04:11] [INFO] >> Test_case.py >> 第82行 - Test_case - 校验切换报价历史是否成功 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第394行 - CustomerList - 筛选报价成功数据 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第401行 - CustomerList - 返回筛选结果 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第409行 - CustomerList - 获取报价历史 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第414行 - CustomerList - 返回报价历史结果 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第422行 - CustomerList - 根据报价历史id切换报价历史 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第427行 - CustomerList - 报价历史已切换 
[2020-12-14 19:04:11] [INFO] >> Test_case.py >> 第102行 - Test_case - 下级账户计划回访数据量对比,使用账号：18612938273 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第363行 - CustomerList - 获取接口返回的计划回访数量 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第375行 - CustomerList - 列表形式返回计划回访数量：[0, 33, 57, 8, 35, 3, 19, 35, 26] 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:11] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:04:12] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:04:12] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600976286, 600922288, 600934393, 600310036, 600310577, 600331548, 600311214, 329876821, 600309940, 600311635, 600310308, 600934389, 600662053, 600842500, 600868787]]给ID为(287523)的用户 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第283行 - CustomerList - 校验分配人员是否匹配 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第288行 - CustomerList - 分配的业务员和实际结果业务员不匹配，默认分配人ID是（287523）：{'buid': 600976286, 'dueDays': {'forceDueDays': 125, 'bizDueDays': 125, 'maintainDays': None, 'lastMaintainDays': None}, 'quoteStatus': [], 'submitStatus': [], 'lastYearSource': 0, 'customerStatusId': 9, 'categoryinfoId': 0, 'employeeId': 287523, 'wechatImg': None, 'renewalStatus': 0, 'createTime': '2020-12-10 13:56:05', 'isFllowUp': 1, 'customerStar': 5.0, 'taskTypeId': 0, 'taskTypeName': '', 'lastFollowUpUrl': '', 'followContentTypeId': 1, 'isIntelligentRenewal': 0, 'followContent': '', 'headImgUrl': '', 'nickName': '', 'deleteTime': '', 'delEmpName': '', 'deleteType': '', 'maintainEndDate': None, 'maintainStatus': 0, 'maintainCategoryName': None, 'maintainEmployeeId': 0, 'maintainEmployeeName': None, 'mileage': 0, 'maintainDate': None, 'maintainStatusName': None, 'maintainDetName': None, 'maintainClintLevelRmark': None, 'maintainActive': None, 'maintainImportFollowUp': None, 'licenseNo': '京AC1122', 'clientName': '', 'carVin': 'LA9JACE296BJNP013', 'moldName': 'JNP6180G', 'registerDate': '2007-04-23', 'lastBizEndDate': '2021-04-17 23:59:59', 'lastForceEndDate': '2021-04-17 23:59:59', 'followUpTimes': 13, 'lastFollowUpDate': '2020-12-14 19:03:56', 'lastFollowUpContent': '自动化录入', 'plannedFollowUpDateTime': '', 'customerStatusName': '成功出单', 'categoryinfoName': '', 'lastYearSourceName': '', 'lastOrganizationName': '', 'employeeName': '自动化分配账号', 'departmentName': '销售部', 'updateTime': '2020-12-14 19:03:51', 'renewalTypeName': 'PC端录入', 'ownerName': ''} 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第434行 - CustomerList - 获取全部客户数据 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第128行 - CustomerList - 录入战败 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第130行 - CustomerList - 客户列表查询京PP2W77是否存在 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京PP2W77查询结果 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:04:13] [INFO] >> CustomerList.py >> 第133行 - CustomerList - 校验查询结果是否为真 
[2020-12-14 19:04:14] [INFO] >> CustomerList.py >> 第177行 - CustomerList - 录入战败通过 
[2020-12-14 19:04:14] [INFO] >> chudanzhanbai.py >> 第46行 - 出单战败查询 - 战败列表查询 
[2020-12-14 19:04:14] [INFO] >> chudanzhanbai.py >> 第57行 - 出单战败查询 - 战败列表查询通过 
[2020-12-14 19:04:14] [INFO] >> CustomerList.py >> 第434行 - CustomerList - 获取全部客户数据 
[2020-12-14 19:04:14] [INFO] >> run_case.py >> 第34行 - run_case - 发送邮件 
[2020-12-14 19:06:22] [INFO] >> run_case.py >> 第17行 - run_case - 登录账户获取touken 
[2020-12-14 19:06:22] [INFO] >> Test_case.py >> 第35行 - Test_case - 新增数据——录入出单流程 
[2020-12-14 19:06:22] [INFO] >> Interface_quote.py >> 第22行 - 新增报价 - 京AC1122发起续保 
[2020-12-14 19:06:23] [INFO] >> Interface_quote.py >> 第41行 - 新增报价 - 获取续保响应结果 
[2020-12-14 19:06:23] [INFO] >> Interface_quote.py >> 第44行 - 新增报价 - 新增车牌成功 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京AC1122查询结果 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第46行 - CustomerList - 根据buid录入出单，默认录入人保 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第49行 - CustomerList - 客户列表查询京AC1122是否存在 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京AC1122查询结果 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第54行 - CustomerList - 查询结果拿第一个buid 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第63行 - CustomerList - 发起录入出单请求 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第82行 - CustomerList - 本年度已出过保单,提交覆盖 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第96行 - CustomerList - 获取响应message校验是否出单成功 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第102行 - CustomerList - 出单成功，校验buid[600976286]是否一致 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第105行 - CustomerList - 校验出单状态、录入保司、金额是否一致 
[2020-12-14 19:06:23] [INFO] >> CustomerList.py >> 第108行 - CustomerList - 出单成功 
[2020-12-14 19:06:23] [INFO] >> chudanzhanbai.py >> 第21行 - 出单战败查询 - 出单列表查询 
[2020-12-14 19:06:23] [INFO] >> chudanzhanbai.py >> 第32行 - 出单战败查询 - 出单列表查询通过 
[2020-12-14 19:06:23] [INFO] >> Test_case.py >> 第49行 - Test_case - 顶级账户计划回访数据量对比，使用账号：jiao 
[2020-12-14 19:06:24] [INFO] >> CustomerList.py >> 第363行 - CustomerList - 获取接口返回的计划回访数量 
[2020-12-14 19:06:24] [INFO] >> CustomerList.py >> 第375行 - CustomerList - 列表形式返回计划回访数量：[0, 336, 305, 278, 234, 37, 76, 133, 88] 
[2020-12-14 19:06:24] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:24] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:25] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:25] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:26] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:26] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:26] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:27] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:27] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:28] [INFO] >> Test_case.py >> 第72行 - Test_case - 校验报价成功的数据是否有报价历史 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第394行 - CustomerList - 筛选报价成功数据 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第401行 - CustomerList - 返回筛选结果 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第409行 - CustomerList - 获取报价历史 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第414行 - CustomerList - 返回报价历史结果 
[2020-12-14 19:06:28] [INFO] >> Test_case.py >> 第82行 - Test_case - 校验切换报价历史是否成功 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第394行 - CustomerList - 筛选报价成功数据 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第401行 - CustomerList - 返回筛选结果 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第409行 - CustomerList - 获取报价历史 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第414行 - CustomerList - 返回报价历史结果 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第422行 - CustomerList - 根据报价历史id切换报价历史 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第427行 - CustomerList - 报价历史已切换 
[2020-12-14 19:06:28] [INFO] >> Test_case.py >> 第102行 - Test_case - 下级账户计划回访数据量对比,使用账号：18612938273 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第363行 - CustomerList - 获取接口返回的计划回访数量 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第375行 - CustomerList - 列表形式返回计划回访数量：[0, 33, 57, 8, 35, 3, 19, 35, 26] 
[2020-12-14 19:06:28] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:29] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:30] [INFO] >> CustomerList.py >> 第383行 - CustomerList - 循环获取计划回访每个TAB页的数据 
[2020-12-14 19:06:30] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:06:30] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:06:30] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:06:30] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:06:30] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:06:30] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600976286, 600331548, 600922288, 600934393, 600310036, 600310577, 600311214, 329876821, 600309940, 600311635, 600310308, 600934389, 600662053, 600842500, 600868787]]给ID为(287523)的用户 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第283行 - CustomerList - 校验分配人员是否匹配 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第288行 - CustomerList - 分配的业务员和实际结果业务员不匹配，默认分配人ID是（287523）：{'buid': 600976286, 'dueDays': {'forceDueDays': 125, 'bizDueDays': 125, 'maintainDays': None, 'lastMaintainDays': None}, 'quoteStatus': [], 'submitStatus': [], 'lastYearSource': 0, 'customerStatusId': 9, 'categoryinfoId': 0, 'employeeId': 287523, 'wechatImg': None, 'renewalStatus': 0, 'createTime': '2020-12-10 13:56:05', 'isFllowUp': 1, 'customerStar': 5.0, 'taskTypeId': 0, 'taskTypeName': '', 'lastFollowUpUrl': '', 'followContentTypeId': 1, 'isIntelligentRenewal': 0, 'followContent': '', 'headImgUrl': '', 'nickName': '', 'deleteTime': '', 'delEmpName': '', 'deleteType': '', 'maintainEndDate': None, 'maintainStatus': 0, 'maintainCategoryName': None, 'maintainEmployeeId': 0, 'maintainEmployeeName': None, 'mileage': 0, 'maintainDate': None, 'maintainStatusName': None, 'maintainDetName': None, 'maintainClintLevelRmark': None, 'maintainActive': None, 'maintainImportFollowUp': None, 'licenseNo': '京AC1122', 'clientName': '', 'carVin': 'LA9JACE296BJNP013', 'moldName': 'JNP6180G', 'registerDate': '2007-04-23', 'lastBizEndDate': '2021-04-17 23:59:59', 'lastForceEndDate': '2021-04-17 23:59:59', 'followUpTimes': 14, 'lastFollowUpDate': '2020-12-14 19:06:13', 'lastFollowUpContent': '自动化录入', 'plannedFollowUpDateTime': '', 'customerStatusName': '成功出单', 'categoryinfoName': '', 'lastYearSourceName': '', 'lastOrganizationName': '', 'employeeName': '自动化分配账号', 'departmentName': '销售部', 'updateTime': '2020-12-14 19:06:19', 'renewalTypeName': 'PC端录入', 'ownerName': ''} 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第434行 - CustomerList - 获取全部客户数据 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第128行 - CustomerList - 录入战败 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第130行 - CustomerList - 客户列表查询京N361S9是否存在 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第27行 - CustomerList - 获取京N361S9查询结果 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第31行 - CustomerList - 客户列表查询车牌通过 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第133行 - CustomerList - 校验查询结果是否为真 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第152行 - CustomerList - 录入战败通过 
[2020-12-14 19:06:31] [INFO] >> chudanzhanbai.py >> 第46行 - 出单战败查询 - 战败列表查询 
[2020-12-14 19:06:31] [INFO] >> chudanzhanbai.py >> 第57行 - 出单战败查询 - 战败列表查询通过 
[2020-12-14 19:06:31] [INFO] >> CustomerList.py >> 第434行 - CustomerList - 获取全部客户数据 
[2020-12-14 19:06:31] [INFO] >> run_case.py >> 第34行 - run_case - 发送邮件 
[2020-12-14 19:11:54] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:11:54] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:11:54] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:11:54] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:11:55] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:11:55] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600310577, 600976286, 600331548, 600922288, 600934393, 600310036, 600311214, 329876821, 600309940, 600311635, 600310308, 600934389, 600662053, 600842500, 600868787]]给ID为(287523)的用户 
[2020-12-14 19:11:55] [INFO] >> CustomerList.py >> 第283行 - CustomerList - 校验分配人员是否匹配 
[2020-12-14 19:11:55] [ERROR] >> CustomerList.py >> 第301行 - CustomerList - 分配接口异常：string indices must be integers 
[2020-12-14 19:13:37] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:13:37] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:13:41] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:13:41] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:13:41] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:13:50] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600310577, 600976286, 600331548, 600922288, 600934393, 600310036, 600311214, 329876821, 600309940, 600311635, 600310308, 600934389, 600662053, 600842500, 600868787]]给ID为(287523)的用户 
[2020-12-14 19:15:28] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:15:28] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:15:31] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:15:31] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:15:36] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:16:51] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:16:51] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:16:52] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:16:52] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:16:52] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:16:52] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600310577, 600976286, 600331548, 600922288]]给ID为(287523)的用户 
[2020-12-14 19:16:52] [INFO] >> CustomerList.py >> 第283行 - CustomerList - 校验分配人员是否匹配 
[2020-12-14 19:16:52] [ERROR] >> CustomerList.py >> 第301行 - CustomerList - 分配接口异常：string indices must be integers 
[2020-12-14 19:17:17] [INFO] >> Test_case.py >> 第125行 - Test_case - 客户列表分配，使用账号wanyuanhao,分配人：17501110001 
[2020-12-14 19:17:17] [INFO] >> Test_case.py >> 第126行 - Test_case - 执行分配用例 
[2020-12-14 19:17:17] [INFO] >> CustomerList.py >> 第248行 - CustomerList - 客户列表分配 
[2020-12-14 19:17:17] [INFO] >> CustomerList.py >> 第255行 - CustomerList - 获取客户列表全部客户的数据 
[2020-12-14 19:17:17] [INFO] >> CustomerList.py >> 第261行 - CustomerList - 拿到前4个buid 
[2020-12-14 19:17:18] [INFO] >> CustomerList.py >> 第273行 - CustomerList - 分配数据[[600331548, 600310577, 600976286, 600922288]]给ID为(287523)的用户 
[2020-12-14 19:17:18] [INFO] >> CustomerList.py >> 第283行 - CustomerList - 校验分配人员是否匹配 
